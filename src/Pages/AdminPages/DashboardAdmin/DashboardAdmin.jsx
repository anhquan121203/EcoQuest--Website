import React, { useEffect } from "react";
import useAdminDashboard from "../../../hooks/useAdminDashboard";
import "./DashboardAdmin.css";

function DashboardAdmin() {
  const {
    overview,
    regionForecast,
    hotTrips,
    decliningTrips,
    tripPopularityAnalysis,
    optimizationSuggestions,
    complete,
    tripAnalysisById,
    customPeriod,
    loading,
    error,
    getOverview,
    getRegionForecast,
    getHotTrips,
    getDecliningTrips,
    getTripPopularityAnalysis,
    getOptimizationSuggestions,
    getComplete,
    getTripAnalysisById,
    getCustomPeriod,
  } = useAdminDashboard();

  useEffect(() => {
    getOverview();
    getRegionForecast();
    getHotTrips();
    getDecliningTrips();
    getTripPopularityAnalysis();
    getOptimizationSuggestions();
    getComplete();
    getTripAnalysisById("3fa85f64-5717-4562-b3fc-2c963f66afa6");
    getCustomPeriod({
      startDate: "2025-08-12T00:00:00",
      endDate: "2025-08-15T00:00:00",
    });
  }, []);

  return (
    <div className="dashboard-admin">
      <header className="dashboard-header">
        <h1>üìä B·∫£ng ƒêi·ªÅu Khi·ªÉn Qu·∫£n Tr·ªã</h1>
      </header>

      {loading && (
        <div className="loading-overlay">
          <div className="spinner"></div>
          <p>ƒêang t·∫£i d·ªØ li·ªáu...</p>
        </div>
      )}
      {error && (
        <div className="error-alert">
          <span>‚ö†Ô∏è L·ªói: {JSON.stringify(error)}</span>
        </div>
      )}

      <div className="dashboard-grid">
        {/* 1. Overview */}
        <section className="card overview-card">
          <h2>1. T·ªïng Quan</h2>
          {overview && (
            <div className="stats-grid">
              {Object.entries(overview).map(([key, value]) => {
                const vietnameseLabels = {
                  totalBookingsThisMonth: "T·ªïng l∆∞·ª£t ƒë·∫∑t th√°ng n√†y",
                  totalBookingsPreviousMonth: "T·ªïng l∆∞·ª£t ƒë·∫∑t th√°ng tr∆∞·ªõc",
                  totalRevenueThisMonth: "T·ªïng doanh thu th√°ng n√†y",
                  totalRevenuePreviousMonth: "T·ªïng doanh thu th√°ng tr∆∞·ªõc",
                  bookingGrowthRate: "T·ª∑ l·ªá tƒÉng tr∆∞·ªüng l∆∞·ª£t ƒë·∫∑t",
                  revenueGrowthRate: "T·ª∑ l·ªá tƒÉng tr∆∞·ªüng doanh thu",
                  activeTrips: "S·ªë chuy·∫øn ƒëi ƒëang ho·∫°t ƒë·ªông",
                  totalDestinations: "T·ªïng s·ªë ƒëi·ªÉm ƒë·∫øn",
                  averageBookingValue: "Gi√° tr·ªã ƒë·∫∑t trung b√¨nh",
                };

                return (
                  <div key={key} className="stat-card">
                    <span className="stat-label">
                      {vietnameseLabels[key] || key}
                    </span>
                    <span className="stat-value">{value}</span>
                  </div>
                );
              })}
            </div>
          )}
        </section>

        {/* 2. Region Forecast */}
        <section className="card forecast-card">
          <h2>2. D·ª± B√°o Khu V·ª±c</h2>
          {regionForecast?.length ? (
            <div className="table-wrapper">
              <table>
                <thead>
                  <tr>
                    <th>T·ªânh</th>
                    <th>Huy·ªán</th>
                    <th>Th√°ng Hi·ªán T·∫°i</th>
                    <th>Th√°ng Tr∆∞·ªõc</th>
                    <th>TƒÉng Tr∆∞·ªüng %</th>
                    <th>D·ª± ƒêo√°n Th√°ng Sau</th>
                  </tr>
                </thead>
                <tbody>
                  {regionForecast.map((item, idx) => (
                    <tr key={idx}>
                      <td>{item.province}</td>
                      <td>{item.district}</td>
                      <td>{item.currentMonthBookings}</td>
                      <td>{item.previousMonthBookings}</td>
                      <td
                        className={
                          item.growthRate >= 0 ? "positive" : "negative"
                        }
                      >
                        {item.growthRate}%
                      </td>
                      <td>{item.predictedNextMonthBookings}</td>
                    </tr>
                  ))}
                </tbody>
              </table>
            </div>
          ) : (
            <p className="no-data">Kh√¥ng c√≥ d·ªØ li·ªáu d·ª± b√°o khu v·ª±c.</p>
          )}
        </section>

        {/* 3. Hot Trips */}
        <section className="card trips-card">
          <h2>3. Chuy·∫øn ƒêi Hot</h2>
          {hotTrips?.length ? (
            <ul className="trips-list">
              {hotTrips.map((trip, idx) => (
                <li key={idx} className="trip-item hot">
                  üî• {trip.tripName}
                </li>
              ))}
            </ul>
          ) : (
            <p className="no-data">Kh√¥ng c√≥ chuy·∫øn ƒëi hot l√∫c n√†y.</p>
          )}
        </section>

        {/* 4. Declining Trips */}
        <section className="card trips-card">
          <h2>4. Chuy·∫øn ƒêi Gi·∫£m S√∫T</h2>
          {decliningTrips?.length ? (
            <ul className="trips-list">
              {decliningTrips.map((trip, idx) => (
                <li key={idx} className="trip-item declining">
                  üìâ {trip.tripName}
                </li>
              ))}
            </ul>
          ) : (
            <p className="no-data">Kh√¥ng c√≥ chuy·∫øn ƒëi gi·∫£m s√∫t.</p>
          )}
        </section>

        {/* 5. Trip Popularity Analysis */}
        <section className="card analysis-card">
          <h2>5. Ph√¢n T√≠ch ƒê·ªô Ph·ªï Bi·∫øn Chuy·∫øn ƒêi</h2>
          {tripPopularityAnalysis ? (
            <div>
              <h3>Chuy·∫øn ƒêi Hot</h3>
              {tripPopularityAnalysis.hotTrips?.length ? (
                <ul className="trips-list">
                  {tripPopularityAnalysis.hotTrips.map((trip, idx) => (
                    <li key={idx} className="trip-item hot">
                      üî• {trip.tripName || trip}
                    </li>
                  ))}
                </ul>
              ) : (
                <p className="no-data">Kh√¥ng c√≥ chuy·∫øn ƒëi hot.</p>
              )}
              <h3>Chuy·∫øn ƒêi Gi·∫£m S√∫T</h3>
              {tripPopularityAnalysis.decliningTrips?.length ? (
                <ul className="trips-list">
                  {tripPopularityAnalysis.decliningTrips.map((trip, idx) => (
                    <li key={idx} className="trip-item declining">
                      üìâ {trip.tripName || trip}
                    </li>
                  ))}
                </ul>
              ) : (
                <p className="no-data">Kh√¥ng c√≥ chuy·∫øn ƒëi gi·∫£m s√∫t.</p>
              )}
            </div>
          ) : (
            <p className="no-data">Kh√¥ng c√≥ d·ªØ li·ªáu ph√¢n t√≠ch ƒë·ªô ph·ªï bi·∫øn.</p>
          )}
        </section>

        {/* 6. Optimization Suggestions */}
        <section className="card suggestions-card">
          <h2>6. G·ª£i √ù T·ªëi ∆Øu H√≥a</h2>
          {optimizationSuggestions?.length ? (
            <div className="suggestions-scroll-container">
              <div className="suggestions-grid">
                {optimizationSuggestions.map((opt) => (
                  <div key={opt.tripId} className="suggestion-card">
                    <h3>{opt.tripName}</h3>
                    <p className="issue">
                      <strong>V·∫•n ƒê·ªÅ:</strong> {opt.currentIssue}
                    </p>
                    <ul className="suggestions-list">
                      {opt.suggestions.map((s, i) => (
                        <li key={i}>
                          <strong>{s.type}:</strong> {s.title} ‚Äî{" "}
                          <em>{s.description}</em>
                        </li>
                      ))}
                    </ul>
                  </div>
                ))}
              </div>
            </div>
          ) : (
            <p className="no-data">Kh√¥ng c√≥ g·ª£i √Ω t·ªëi ∆∞u h√≥a.</p>
          )}
        </section>

        {/* 7. Complete */}
        <section className="card complete-card">
          <h2>7. D·ªØ Li·ªáu T·ªïng H·ª£p</h2>
          {complete ? (
            <div>
              {/* Region Forecasts v·ªõi Historical Data */}
              {complete.regionForecasts?.length ? (
                <div className="subsection">
                  <h3>D·ª± B√°o Khu V·ª±c (V·ªõi D·ªØ Li·ªáu L·ªãch S·ª≠)</h3>
                  <div className="table-wrapper">
                    <table>
                      <thead>
                        <tr>
                          <th>T·ªânh</th>
                          <th>Huy·ªán</th>
                          <th>Th√°ng Hi·ªán T·∫°i</th>
                          <th>Th√°ng Tr∆∞·ªõc</th>
                          <th>TƒÉng Tr∆∞·ªüng %</th>
                          <th>D·ª± ƒêo√°n Th√°ng Sau</th>
                          <th>D·ªØ Li·ªáu L·ªãch S·ª≠</th>
                        </tr>
                      </thead>
                      <tbody>
                        {complete.regionForecasts.map((item, idx) => (
                          <tr key={idx}>
                            <td>{item.province}</td>
                            <td>{item.district}</td>
                            <td>{item.currentMonthBookings}</td>
                            <td>{item.previousMonthBookings}</td>
                            <td
                              className={
                                item.growthRate >= 0 ? "positive" : "negative"
                              }
                            >
                              {item.growthRate}%
                            </td>
                            <td>{item.predictedNextMonthBookings}</td>
                            <td>
                              {item.historicalData?.length ? (
                                <ul className="historical-list">
                                  {item.historicalData.map((hist, hIdx) => (
                                    <li key={hIdx}>
                                      {hist.month}: ƒê·∫∑t ch·ªó -{" "}
                                      {hist.bookingCount}, Doanh thu -{" "}
                                      {hist.revenue}
                                    </li>
                                  ))}
                                </ul>
                              ) : (
                                <p>Kh√¥ng c√≥ d·ªØ li·ªáu l·ªãch s·ª≠.</p>
                              )}
                            </td>
                          </tr>
                        ))}
                      </tbody>
                    </table>
                  </div>
                </div>
              ) : (
                <p className="no-data">Kh√¥ng c√≥ d·ª± b√°o khu v·ª±c.</p>
              )}

              {/* Optimization Suggestions v·ªõi chi ti·∫øt m·ªü r·ªông */}
              {complete.optimizationSuggestions?.length ? (
                <div className="subsection">
                  <h3>G·ª£i √ù T·ªëi ∆Øu H√≥a (V·ªõi Chi Ti·∫øt M·ªü R·ªông)</h3>
                  <div className="suggestions-grid">
                    {complete.optimizationSuggestions.map((opt) => (
                      <div key={opt.tripId} className="suggestion-card">
                        <h3>{opt.tripName}</h3>
                        <p className="issue">
                          <strong>V·∫•n ƒê·ªÅ:</strong> {opt.currentIssue}
                        </p>
                        <ul className="suggestions-list">
                          {opt.suggestions.map((s, i) => (
                            <li key={i}>
                              <strong>{s.type}:</strong> {s.title} ‚Äî{" "}
                              <em>{s.description}</em> (T√°c ƒê·ªông D·ª± Ki·∫øn:{" "}
                              {s.expectedImpact}, ƒê·ªô Kh√≥: {s.difficulty})
                            </li>
                          ))}
                        </ul>
                        <p>
                          <strong>TƒÉng Doanh Thu Ti·ªÅm NƒÉng:</strong>{" "}
                          {opt.potentialRevenueIncrease}
                        </p>
                        <p>
                          <strong>∆Øu Ti√™n:</strong> {opt.priority}
                        </p>
                      </div>
                    ))}
                  </div>
                </div>
              ) : (
                <p className="no-data">Kh√¥ng c√≥ g·ª£i √Ω t·ªëi ∆∞u h√≥a.</p>
              )}
            </div>
          ) : (
            <p className="no-data">Kh√¥ng c√≥ d·ªØ li·ªáu t·ªïng h·ª£p.</p>
          )}
        </section>

        {/* 8. Trip Analysis By ID */}
        <section className="card analysis-card">
          <h2>8. Ph√¢n T√≠ch Chuy·∫øn ƒêi Theo ID</h2>
          {tripAnalysisById ? (
            <pre className="json-pretty">
              {JSON.stringify(tripAnalysisById, null, 2)}
            </pre>
          ) : (
            <p className="no-data">
              Kh√¥ng t√¨m th·∫•y d·ªØ li·ªáu ƒë·∫∑t ch·ªó cho chuy·∫øn ƒëi n√†y trong 3 th√°ng
              qua.
            </p>
          )}
        </section>

        {/* 9. Custom Period */}
        <section className="card custom-card">
          <h2>9. Kho·∫£ng Th·ªùi Gian T√πy Ch·ªânh</h2>
          {customPeriod ? (
            <div>
              <h3>
                Kho·∫£ng Th·ªùi Gian: {customPeriod.period?.startDate} ƒë·∫øn{" "}
                {customPeriod.period?.endDate}
              </h3>
              {customPeriod.summary && (
                <div className="stats-grid">
                  {Object.entries(customPeriod.summary).map(([key, value]) => (
                    <div key={key} className="stat-card">
                      <span className="stat-label">
                        {key.replace(/([A-Z])/g, " $1").trim()}
                      </span>
                      <span className="stat-value">{value}</span>
                    </div>
                  ))}
                </div>
              )}
              <h3>Xu H∆∞·ªõng H√†ng Ng√†y</h3>
              {customPeriod.dailyTrend?.length ? (
                <div className="table-wrapper">
                  <table>
                    <thead>
                      <tr>
                        <th>Ng√†y</th>
                        <th>ƒê·∫∑t Ch·ªó</th>
                        <th>Doanh Thu</th>
                      </tr>
                    </thead>
                    <tbody>
                      {customPeriod.dailyTrend.map((trend, idx) => (
                        <tr key={idx}>
                          <td>{trend.date}</td>
                          <td>{trend.bookings}</td>
                          <td>{trend.revenue}</td>
                        </tr>
                      ))}
                    </tbody>
                  </table>
                </div>
              ) : (
                <p className="no-data">Kh√¥ng c√≥ d·ªØ li·ªáu xu h∆∞·ªõng h√†ng ng√†y.</p>
              )}
              <h3>ƒêi·ªÉm ƒê·∫øn H√†ng ƒê·∫ßu</h3>
              {customPeriod.topDestinations?.length ? (
                <ul className="trips-list">
                  {customPeriod.topDestinations.map((dest, idx) => (
                    <li key={idx}>
                      {dest.name || dest.destination} - ƒê·∫∑t ch·ªó: {dest.bookings}
                      , Doanh thu: {dest.revenue}
                    </li>
                  ))}
                </ul>
              ) : (
                <p className="no-data">Kh√¥ng c√≥ ƒëi·ªÉm ƒë·∫øn h√†ng ƒë·∫ßu.</p>
              )}
            </div>
          ) : (
            <p className="no-data">
              Kh√¥ng c√≥ d·ªØ li·ªáu kho·∫£ng th·ªùi gian t√πy ch·ªânh.
            </p>
          )}
        </section>
      </div>
    </div>
  );
}

export default DashboardAdmin;
